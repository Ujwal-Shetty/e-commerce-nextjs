// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             Int    @id @default(autoincrement()) 
  name           String?
  email          String?    @unique
  emailVerified  DateTime?
  avatar         String     @default("https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png")
  hashedPassword String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  products       Product[]
  cart           Cart[]

}

model Category {
  id             Int  @id @default(autoincrement()) 
  name           String   @unique
  property       String[] 
  products       Product[]
}


model Product {
  id                 Int  @id @default(autoincrement()) 
  name               String @unique
  description        String 
  productImage       String[]
  regularPrice       Int
  discountPrice      Int?
  CategoryName       String
  varients           String[]
  intentoryQuantity  Int @default(0)
  category           Category   @relation(fields: [categoryId], references: [id])
  categoryId         Int
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  user               User       @relation(fields: [userId], references: [id])
  userId             Int 
  cartItem           CartItem[]
}


model CartItem {
   id            Int  @id  @default(autoincrement()) 
   product       Product   @relation(fields: [productId], references: [id])
   productId     Int 
   cart          Cart ?    @relation(fields: [cartId], references: [id])
   cartId        Int   
}

model Cart {
  id            Int  @id @default(autoincrement())
  user          User     @relation(fields: [userId], references: [id])
  userId        Int      @unique 
  cartItem      CartItem[]
}
